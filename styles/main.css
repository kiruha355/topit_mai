@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Black.woff2") format("woff2");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Heavy.woff2") format("woff2");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Semibold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Thin.woff2") format("woff2");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Pro-Rounded";
  src: url("../fonts/SF-Pro-Rounded-Ultralight.woff2") format("woff2");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #FFFFFF;
  --color-dark: #1E1E1E;
  --color-green98: #F2FCEF;
  --color-green95: #DDF8D8;
  --color-green90: #BEEFBB;
  --color-green80: #80DA88;
  --color-green70: #44C265;
  --color-green60: #1AA64A;
  --color-green50: #128937;
  --color-green40: #006C35;
  --color-green30: #00522C;
  --color-green20: #00381F;
  --color-green10: #002110;
  --color-black: #000000;
  --font-family-base: "SF-Pro-Rounded", sans-serif;
  --container-width: 75rem;
  --container-padding-x: 1.25rem;
  --container-padding-x: 1.25rem;
  --border: 0.1875rem solid var(--color-green20);
  --transition-duration: 0.2s;
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 68.75rem;
    --container-padding-x: 1rem;
  }
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 56.25rem;
    --container-padding-x: 1rem;
  }
}
@media (width <= 90.06125rem) {
  :root {
    --container-padding-x: 0.75rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 90.06125rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 90.06125rem) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(1rem, 0.9552752294rem + 0.1834862385vw, 1.125rem);
  font-family: var(--font-family-base);
  letter-spacing: normal;
  color: var(--color-green20);
  background-color: var(--color-green95);
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-light);
  font-weight: 500;
}

h1, .h1,
h2, .h2,
h3, .h3 {
  font-family: var(--font-family-base);
  font-weight: 700;
}

h4, .h4,
h5, .h5,
h6, .h6 {
  font-family: var(--font-family-base);
  font-weight: 600;
}

h1, .h1 {
  font-size: clamp(1.875rem, 0.9805045872rem + 3.6697247706vw, 4.375rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.75rem, 1.0791284404rem + 2.752293578vw, 3.625rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(1.5rem, 1.1422018349rem + 1.4678899083vw, 2.5rem);
}

h4, .h4 {
  font-size: clamp(1.125rem, 0.9461009174rem + 0.7339449541vw, 1.625rem);
}

h5, .h5 {
  font-size: clamp(1.125rem, 0.9908256881rem + 0.5504587156vw, 1.5rem);
}

h6, .h6 {
  font-size: clamp(1rem, 0.9105504587rem + 0.3669724771vw, 1.25rem);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-green80);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-green80);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

.logo {
  max-width: clamp(8.125rem, 2.0871559633rem + 24.7706422018vw, 25rem);
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  color: var(--color-green20);
  background-color: var(--color-green95);
  white-space: nowrap;
  border: 3px solid transparent;
  border-radius: 1.875rem;
  text-decoration: none;
  transition: all var(--transition-duration) ease-in-out;
}
@media (width <= 90.06125rem) {
  .button {
    padding: 0.625rem 1.25rem;
    font-size: 0.875rem;
    border-radius: 1.5rem;
  }
}
.button:hover {
  color: var(--color-green50);
  background-color: var(--color-green90);
  border-color: var(--color-green50);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}
.button:active {
  transform: translateY(0);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}

.header__body {
  padding-block: 0.5rem;
  background-color: var(--color-green95);
  border-bottom: 1px solid var(--color-green90);
}
.header__body-inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header__overlay {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-grow: 1;
  gap: 6.25rem;
}
@media (width > 90.06125rem) {
  .header__overlay {
    display: flex;
  }
}
@media (width <= 90.06125rem) {
  .header__overlay {
    display: none;
  }
}
.header__logo {
  flex-shrink: 0;
}
.header__logo .logo__image {
  width: 9.375rem;
  height: auto;
}
@media (width <= 90.06125rem) {
  .header__logo .logo__image {
    width: 7.5rem;
  }
}
@media (width <= 90.06125rem) {
  .header__logo .logo__image {
    width: 5rem;
  }
}
.header__menu {
  display: flex;
  justify-content: center;
}
.header__menu-list {
  display: flex;
  align-items: center;
  gap: 0rem;
  margin: 0;
  padding: 0;
  flex-wrap: nowrap;
  white-space: nowrap;
}
.header__menu-item {
  position: relative;
}
.header__menu-link {
  padding: 0.1875rem 0.9375rem;
  font-size: 1.0625rem;
  font-weight: 600;
  color: var(--color-green30);
  text-decoration: none;
  position: relative;
  white-space: nowrap;
}
.header__menu-link:hover, .header__menu-link.is-active {
  color: var(--color-green50);
}
.header__menu-link:hover::after, .header__menu-link.is-active::after {
  display: block;
}
.header__menu-link::after {
  content: "";
  position: absolute;
  bottom: 0.0625rem;
  left: 1.125rem;
  width: calc(100% - 2.25rem);
  height: 0.125rem;
  background-color: var(--color-green50);
  display: none;
}
.header__login-link {
  padding: 0.625rem 1.5rem;
  font-size: 1.0625rem;
  font-weight: 600;
  color: var(--color-green20);
  background-color: var(--color-green90);
  border: 2px solid transparent;
  border-radius: 1.875rem;
  text-decoration: none;
  white-space: nowrap;
  flex-shrink: 0;
}
.header__login-link:hover {
  color: var(--color-green50);
  background-color: var(--color-green85);
  border-color: var(--color-green50);
}
.header__burger-button {
  display: none;
}
@media (width <= 90.06125rem) {
  .header__burger-button {
    display: flex;
    flex-direction: column;
    gap: 0.1875rem;
    padding: 0.375rem;
    background: transparent;
    border: 2px solid var(--color-green80);
    border-radius: 0.375rem;
    cursor: pointer;
    width: 2.375rem;
    height: 2.375rem;
  }
}
.header__burger-button-line {
  width: 1.125rem;
  height: 0.125rem;
  background-color: var(--color-green30);
}

/*# sourceMappingURL=main.css.map */
